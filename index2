<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lexique numérique participatif</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        table {
            border-collapse: collapse;
            width: 100%;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 8px;
        }
        th {
            background-color: #f2f2f2; /* Couleur d'arrière-plan pour les en-têtes de colonne */
            text-align: left;
        }
        .alphabet-bar {
            margin: 20px 0;
        }
        .alphabet-bar button {
            margin: 2px;
            padding: 9px; /* Réduit le padding de 10% (de 10px à 9px) */
            cursor: pointer;
            font-size: 90%; /* Réduit la taille de la police de 10% */
        }
        .single-letter {
            background-color: #90EE90; /* Couleur verte clair */
        }
    </style>
</head>
<body>

<h2>Lexique numérique participatif</h2>

<div class="alphabet-bar">
    <button class="search-btn" data-column="A">A</button>
    <button class="search-btn" data-column="B">B</button>
    <button class="search-btn" data-column="C">C</button>
    <button class="search-btn" data-column="D">D</button>
    <button class="search-btn" data-column="E">E</button>
    <button class="search-btn" data-column="F">F</button>
    <button class="search-btn" data-column="G">G</button>
    <button class="search-btn" data-column="H">H</button>
    <button class="search-btn" data-column="I">I</button>
    <button class="search-btn" data-column="J">J</button>
    <button class="search-btn" data-column="K">K</button>
    <button class="search-btn" data-column="L">L</button>
    <button class="search-btn" data-column="M">M</button>
    <button class="search-btn" data-column="N">N</button>
    <button class="search-btn" data-column="O">O</button>
    <button class="search-btn" data-column="P">P</button>
    <button class="search-btn" data-column="Q">Q</button>
    <button class="search-btn" data-column="R">R</button>
    <button class="search-btn" data-column="S">S</button>
    <button class="search-btn" data-column="T">T</button>
    <button class="search-btn" data-column="U">U</button>
    <button class="search-btn" data-column="V">V</button>
    <button class="search-btn" data-column="W">W</button>
    <button class="search-btn" data-column="X">X</button>
    <button class="search-btn" data-column="Y">Y</button>
    <button class="search-btn" data-column="Z">Z</button>
    <button class="search-btn" data-column="all">Tout</button>
</div>

<table id="data-table">
    <thead>
        <tr>
            <th>Définitions</th>
        </tr>
    </thead>
    <tbody>
        <!-- Les données de la feuille s'afficheront ici -->
    </tbody>
</table>

<script>
    const SHEET_ID = '1Y4zpeQJgkalrj32uYIF613sT-Nox5SHzXCduXCFEFTw';
    const API_KEY = 'AIzaSyDMdpfkeyCNGeR24WJPiNBj__E64kPrKhE';
    const RANGE = 'Lexique!A1:Z100'; // Ajustez la plage selon vos besoins

    $(document).ready(function() {
        // Fonction pour récupérer les données de la Google Sheet
        function fetchData() {
            return $.get(`https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/${RANGE}?key=${API_KEY}`);
        }

        // Événement pour la barre de recherche
        $('.search-btn').on('click', function() {
            const column = $(this).data('column');
            fetchData().then(data => {
                const rows = data.values;
                $('#data-table tbody').empty(); // Effacer le tableau précédent

                if (rows && rows.length > 0) {
                    if (column === 'all') {
                        // Affiche tous les mots en une seule colonne
                        const allWords = [];
                        for (let col = 0; col < rows[0].length; col++) {
                            for (let row of rows) {
                                const value = row[col];
                                if (value) {
                                    allWords.push(value.includes(':') ? value.replace(/(.*?:)/, '<strong>$1</strong>') : value);
                                }
                            }
                        }
                        // Affiche les mots en colonne
                        allWords.forEach(word => {
                            $('#data-table tbody').append(`<tr><td>${word}</td></tr>`);
                        });
                    } else {
                        const colIndex = column.charCodeAt(0) - 65; // Convertit la lettre en index (A=0, B=1, ...)
                        const columnWords = [];
                        
                        rows.forEach(row => {
                            const value = (row[colIndex] !== undefined ? row[colIndex] : ''); 
                            if (value) {
                                const wordHTML = value.includes(':') ? value.replace(/(.*?:)/, '<strong>$1</strong>') : value;
                                columnWords.push({word: wordHTML, isSingleLetter: value.length === 1}); // Enregistre aussi si c'est une lettre unique
                            }
                        });

                        // Affiche les mots de la colonne sélectionnée
                        columnWords.forEach(item => {
                            const singleLetterClass = (item.word.length === 1) ? 'single-letter' : ''; // Vérifie si le mot est une seule lettre
                            $('#data-table tbody').append(`<tr><td class="${singleLetterClass}">${item.word}</td></tr>`);
                        });
                    }
                } else {
                    $('#data-table tbody').append('<tr><td>Aucune donnée trouvée.</td></tr>');
                }
            });
        });
    });
</script>

</body>
</html>
